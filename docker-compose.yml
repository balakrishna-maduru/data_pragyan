version: '3.8'

services:
  mariadb:
    image: mariadb:10.11
    container_name: data_pragyan_mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-data_pragyan}
      MYSQL_USER: ${MYSQL_USER:-datafixer}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-datafixer123}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - data_pragyan_network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  data-pragyan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: data_pragyan_app
    ports:
      - "${APP_PORT:-8501}:8501"
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER:-datafixer}:${MYSQL_PASSWORD:-datafixer123}@mariadb:3306/${MYSQL_DATABASE:-data_pragyan}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LLM_MODEL=${LLM_MODEL:-gemini-1.5-flash}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE:-0.1}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
      - ./src:/app/src:ro  # Mount source for development (read-only in production)
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - data_pragyan_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: data_pragyan_phpmyadmin
    environment:
      PMA_HOST: mariadb
      PMA_USER: ${MYSQL_USER:-datafixer}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-datafixer123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      PMA_ARBITRARY: 1
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - data_pragyan_network
    restart: unless-stopped
    profiles:
      - admin  # Optional service, start with --profile admin

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: data_pragyan_nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates
    depends_on:
      - data-pragyan
    networks:
      - data_pragyan_network
    restart: unless-stopped
    profiles:
      - production  # Only for production deployment

volumes:
  mariadb_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  data_pragyan_network:
    driver: bridge